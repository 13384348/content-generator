🚀 阿里云服务器部署指令

请在阿里云服务器终端依次执行以下命令：

1️⃣ 停止当前应用
pkill -f "node.*server.js"
pkill -f "node.*backend"

2️⃣ 清理并重新创建目录
rm -rf /opt/content-generator
mkdir -p /opt/content-generator
cd /opt/content-generator

3️⃣ 创建服务器文件
cat > server.js << 'EOF'
const express = require('express');
const path = require('path');
const cors = require('cors');

const app = express();
const PORT = process.env.PORT || 5004;

app.use(cors({
  origin: ['http://localhost:3000', 'http://8.154.36.16', 'http://mengtaiqi168.com'],
  credentials: true
}));

app.use(express.json());
app.use(express.static(path.join(__dirname, 'dist')));

app.get('/api/health', (req, res) => {
  res.json({
    status: 'healthy',
    timestamp: new Date().toISOString(),
    uptime: process.uptime()
  });
});

app.post('/api/auth/login', (req, res) => {
  res.json({
    success: true,
    message: '登录成功',
    user: { id: 1, username: 'test' }
  });
});

app.post('/api/content/generate', (req, res) => {
  const { type, input } = req.body;
  setTimeout(() => {
    res.json({
      success: true,
      data: {
        type,
        input,
        output: `AI生成的${type}内容: ${input}`,
        timestamp: new Date().toISOString()
      }
    });
  }, 2000);
});

app.get('/api/history', (req, res) => {
  res.json({
    success: true,
    data: [
      {
        id: 1,
        title: '示例内容',
        type: '内容生成',
        created_at: new Date().toISOString()
      }
    ]
  });
});

app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'dist', 'index.html'));
});

app.listen(PORT, () => {
  console.log(`🚀 服务器运行在端口 ${PORT}`);
});
EOF

4️⃣ 创建package.json
cat > package.json << 'EOF'
{
  "name": "content-generator-server",
  "version": "1.0.0",
  "main": "server.js",
  "scripts": {
    "start": "node server.js"
  },
  "dependencies": {
    "express": "^4.19.2",
    "cors": "^2.8.5"
  }
}
EOF

5️⃣ 安装依赖
npm install

6️⃣ 创建前端目录并添加测试文件
mkdir -p dist
cat > dist/index.html << 'EOF'
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>内容生成器</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background: #ffffff !important;
            color: #1a1a1a !important;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            text-align: center;
        }
        h1 { color: #667eea; }
        .status {
            padding: 20px;
            background: #f0f0f0;
            border-radius: 8px;
            margin: 20px 0;
        }
        .btn {
            padding: 10px 20px;
            background: #667eea;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>🤖 AI内容生成器</h1>
        <div class="status">
            <p>✅ 应用已成功部署</p>
            <p>📱 手机端已修复白色背景</p>
            <p>🔧 功能正在完善中</p>
        </div>
        <button class="btn" onclick="testAPI()">测试API</button>
        <div id="result"></div>
    </div>

    <script>
        function testAPI() {
            fetch('/api/health')
                .then(res => res.json())
                .then(data => {
                    document.getElementById('result').innerHTML =
                        '<div class="status">API测试成功: ' + JSON.stringify(data) + '</div>';
                })
                .catch(err => {
                    document.getElementById('result').innerHTML =
                        '<div class="status">API测试失败: ' + err.message + '</div>';
                });
        }
    </script>
</body>
</html>
EOF

7️⃣ 启动应用
nohup node server.js > app.log 2>&1 &

8️⃣ 验证部署
echo "等待应用启动..."
sleep 5
curl http://localhost:5004/api/health

执行完成后，访问 http://8.154.36.16 查看效果！